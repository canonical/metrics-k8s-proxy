---
apiVersion: v1
kind: Namespace
metadata:
  name: namespace-a
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metrics-server-script
  namespace: namespace-a
data:
  serve_metrics.py: |
    import sys
    import time
    from http.server import BaseHTTPRequestHandler, HTTPServer

    class MetricsHandler(BaseHTTPRequestHandler):
        def do_GET(self):
            delay = int(sys.argv[1]) if len(sys.argv) > 1 else 0
            time.sleep(delay)  # Introduce delay if provided
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'metric_total 123\n')

    if __name__ == "__main__":
        port = int(sys.argv[2]) if len(sys.argv) > 2 else 8080
        httpd = HTTPServer(('0.0.0.0', port), MetricsHandler)
        httpd.serve_forever()
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-1
  namespace: namespace-a
  labels:
    foo: bar
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics-1"
spec:
  containers:
  - name: metrics-server
    image: python:3.9-slim
    command: ["python", "/scripts/serve_metrics.py", "0", "8080"]  # 0 seconds delay, port 8080
    ports:
    - containerPort: 8080
    volumeMounts:
    - name: metrics-script
      mountPath: /scripts
  volumes:
  - name: metrics-script
    configMap:
      name: metrics-server-script
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-2
  namespace: namespace-a
  labels:
    foo: bar
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
    prometheus.io/path: "/metrics-2"
spec:
  containers:
  - name: metrics-server
    image: python:3.9-slim
    command: ["python", "/scripts/serve_metrics.py", "0", "8081"]  # 0 seconds delay, port 8081
    ports:
    - containerPort: 8081
    volumeMounts:
    - name: metrics-script
      mountPath: /scripts
  volumes:
  - name: metrics-script
    configMap:
      name: metrics-server-script
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-3
  namespace: namespace-a
  labels:
    foo: bar
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8082"
    prometheus.io/path: "/metrics-3"
spec:
  containers:
  - name: metrics-server
    image: python:3.9-slim
    command: ["python", "/scripts/serve_metrics.py", "15", "8082"]  # 15 seconds delay, port 8082
    ports:
    - containerPort: 8082
    volumeMounts:
    - name: metrics-script
      mountPath: /scripts
  volumes:
  - name: metrics-script
    configMap:
      name: metrics-server-script
